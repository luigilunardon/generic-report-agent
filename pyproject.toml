[tool.ruff]
line-length = 100
indent-width = 4
target-version = "py39"
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    ".mypy_cache",
    ".pytest_cache",
]
fix = true
lint.select = [
    "F",  # Pyflakes
    "E",  # pycodestyle (Error)
    "W",  # pycodestyle (Warning)
    "I",  # isort (for imports)
    "C90",  # mccabe (for names too complex)
    "N",  # pep8-naming
    "UP",  # pyupgrade
    "YTT",  # flake8-2020
    "ASYNC",  # async
    "S",  # bandit
    "B",  # flake8-bugbear
    "A",  # flake8-builtins
    "C4",  # flake8-comprehensions
    "T10",  # flake8-debugger
    "EM",  # flake8-errmsg
    "ICN",  # flake8-import-conventions
    "LOG",  # flake8-logging
    "G",  # flake8-logging-format
    "INP",  # flake8-no-pep420
    "PIE",  # flake8-pie
    "PYI",  # flake8-pyi
    "PT",  # flake8-pytest-style
    "Q",  # flake8-quotes
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SLF",  # flake8-self
    "SLOT",  # flake8-slots
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "INT",  # flake8-gettext
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "TD", # flake8-todos
    "PL",  # Pylint
    "FLY",  # flynt
    "PERF",  # Perflint
    "FURB",  # refurb
    "RUF",  # Ruff-specific rules
    "D",  # pydocstyle
]
lint.ignore = [
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    "ISC001",
    "ISC002",
    "PERF203",
    "D203",
    "D213",
]

lint.fixable = ["ALL"]
lint.unfixable = []


[tool.ruff.format]
quote-style = "preserve"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

